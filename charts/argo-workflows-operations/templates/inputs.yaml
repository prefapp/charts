---
{{- /*
Define the parameters for the Workflow resource for the argo-workflows-operations chart.
This template is called for each operation defined and fixes parameters for the Workflow.
*/ -}}
{{ define "argo-workflows-operations.parameters" }}

{{- if or (eq .operation.name "aks-start-stop-cluster") (eq .operation.inputs.name "aks-start-stop-cluster") -}}
{{- $errorMsg := "\n\nThe %s is required in the aks-start-stop-cluster operation. The minimal schema is:\n  aks-start-stop-cluster:\n    resource_group: string\n    cluster_name: string\n    action: string" -}}
- name: subscription_id
  value: {{ if hasKey .operation "subscription_id" }}{{ .operation.subscription_id }}{{ else }}{{ .global.subscription_id }}{{ end }}
- name: resource_group
  value: {{ if hasKey .operation.inputs "resource_group" }}{{ .operation.inputs.resource_group }}{{ else }}{{ fail (printf $errorMsg "resource_group") }}{{ end }}
- name: cluster_name
  value: {{ if hasKey .operation.inputs "cluster_name" }}{{ .operation.inputs.cluster_name }}{{ else }}{{ fail (printf $errorMsg "cluster_name") }}{{ end }}
- name: action
  value: {{ if and (hasKey .operation.inputs "action") (or (eq .operation.inputs.action "start") (eq .operation.inputs.action "stop")) }}{{ .operation.inputs.action }}{{ else }}{{ fail (printf (printf "%s (Only 'start' or 'stop' value)" $errorMsg) "action") }}{{ end }}
- name: output_subject
  value: Azure-Kubernetes-Service
{{- end -}}

{{- if eq .operation.name "vmss-scale-instances" -}}
{{- $errorMsg := "\n\nThe %s is required in the vmss-scale-instances operation. The minimal schema is:\n  vmss-scale-instances:\n    resource_group: string\n    vmss_name: string\n    instances: int" -}}
- name: subscription_id
  value: {{ if hasKey .operation "subscription_id" }}{{ .operation.subscription_id }}{{ else }}{{ .global.subscription_id }}{{ end }}
- name: resource_group
  value: {{ if hasKey .operation.inputs "resource_group" }}{{ .operation.inputs.resource_group }}{{ else }}{{ fail (printf $errorMsg "resource_group") }}{{ end }}
- name: vmss_name
  value: {{ if hasKey .operation.inputs "vmss_name" }}{{ .operation.inputs.vmss_name }}{{ else }}{{ fail (printf $errorMsg "vmss_name") }}{{ end }}
- name: instances
  value: {{ if hasKey .operation.inputs "instances" }}{{ .operation.inputs.instances }}{{ else }}{{ fail (printf $errorMsg "instances") }}{{ end }}
- name: output_subject
  value: Azure-VMSS
{{- end -}}

{{- if eq .operation.name "flexible-server-start-stop-postgresql" -}}
{{- $errorMsg := "\n\nThe %s is required in the flexible-server-start-stop-postgresql operation. The minimal schema is:\n  flexible-server-start-stop-postgresql:\n    resource_group: string\n    server_name: string\n    action: string" -}}
- name: subscription_id
  value: {{ if hasKey .operation "subscription_id" }}{{ .operation.subscription_id }}{{ else }}{{ .global.subscription_id }}{{ end }}
- name: resource_group
  value: {{ if hasKey .operation.inputs "resource_group" }}{{ .operation.inputs.resource_group }}{{ else }}{{ fail (printf $errorMsg "resource_group") }}{{ end }}
- name: server_name
  value: {{ if hasKey .operation.inputs "server_name" }}{{ .operation.inputs.server_name }}{{ else }}{{ fail (printf $errorMsg "server_name") }}{{ end }}
- name: action
  value: {{ if and (hasKey .operation.inputs "action") (or (eq .operation.inputs.action "start") (eq .operation.inputs.action "stop")) }}{{ .operation.inputs.action }}{{ else }}{{ fail (printf (printf "%s (Only 'start' or 'stop' value)" $errorMsg) "action") }}{{ end }}
- name: output_subject
  value: Azure-PostgreSQL
{{- end -}}

{{- if eq .operation.name "mongodb-atlas-start-pause-cluster" -}}
{{- $errorMsg := "\n\nThe %s is required in the mongodb-atlas-start-pause-cluster operation. The minimal schema is:\n  mongodb-atlas-start-pause-cluster:\n    secret_namespace: string\n    secret_name: string\n    organization_id: string\n    project_id: string\n    cluster_name: string\n    action: string" -}}
- name: secret_namespace
  value: {{ if hasKey .operation.inputs "secret_namespace" }}{{ .operation.inputs.secret_namespace }}{{ else }}{{ fail (printf $errorMsg "secret_namespace") }}{{ end }}
- name: secret_name
  value: {{ if hasKey .operation.inputs "secret_name" }}{{ .operation.inputs.secret_name }}{{ else }}{{ fail (printf $errorMsg "secret_name") }}{{ end }}
- name: organization_id
  value: {{ if hasKey .operation.inputs "organization_id" }}{{ .operation.inputs.organization_id }}{{ else }}{{ fail (printf $errorMsg "organization_id") }}{{ end }}
- name: project_id
  value: {{ if hasKey .operation.inputs "project_id" }}{{ .operation.inputs.project_id }}{{ else }}{{ fail (printf $errorMsg "project_id") }}{{ end }}
- name: cluster_name
  value: {{ if hasKey .operation.inputs "cluster_name" }}{{ .operation.inputs.cluster_name }}{{ else }}{{ fail (printf $errorMsg "cluster_name") }}{{ end }}
- name: action
  value: {{ if and (hasKey .operation.inputs "action") (or (eq .operation.inputs.action "start") (eq .operation.inputs.action "pause")) }}{{ .operation.inputs.action }}{{ else }}{{ fail (printf (printf "%s (Only 'start' or 'pause' value)" $errorMsg) "action") }}{{ end }}
- name: output_subject
  value: MongoDB-Atlas
{{- end -}}

{{- if eq .operation.name "datadog-unmute-mute-monitors" -}}
{{- $errorMsg := "\n\nThe %s is required in the datadog-unmute-mute-monitors operation. The minimal schema is:\n  datadog-unmute-mute-monitors:\n    secret_namespace: string\n    secret_name: string\n    monitor_ids: []string\n    action: string" -}}
- name: secret_namespace
  value: {{ if hasKey .operation.inputs "secret_namespace" }}{{ .operation.inputs.secret_namespace }}{{ else }}{{ fail (printf $errorMsg "secret_namespace") }}{{ end }}
- name: secret_name
  value: {{ if hasKey .operation.inputs "secret_name" }}{{ .operation.inputs.secret_name }}{{ else }}{{ fail (printf $errorMsg "secret_name") }}{{ end }}
- name: monitor_ids
  value: {{ if hasKey .operation.inputs "monitor_ids" }}{{ join "," .operation.inputs.monitor_ids }}{{ else }}{{ fail (printf $errorMsg "monitor_ids") }}{{ end }}
- name: action
  value: {{ if and (hasKey .operation.inputs "action") (or (eq .operation.inputs.action "unmute") (eq .operation.inputs.action "mute")) }}{{ .operation.inputs.action }}{{ else }}{{ fail (printf (printf "%s (Only 'unmute' or 'mute' value)" $errorMsg) "action") }}{{ end }}
- name: output_subject
  value: Datadog
{{- end -}}

{{- if eq .operation.name "uptimerobot-resume-pause-monitors" -}}
{{- $errorMsg := "\n\nThe %s is required in the uptimerobot-resume-pause-monitors operation. The minimal schema is:\n  uptimerobot-resume-pause-monitors:\n    secret_namespace: string\n    secret_name: string\n    monitor_ids: []string\n    action: string" -}}
- name: secret_namespace
  value: {{ if hasKey .operation.inputs "secret_namespace" }}{{ .operation.inputs.secret_namespace }}{{ else }}{{ fail (printf $errorMsg "secret_namespace") }}{{ end }}
- name: secret_name
  value: {{ if hasKey .operation.inputs "secret_name" }}{{ .operation.inputs.secret_name }}{{ else }}{{ fail (printf $errorMsg "secret_name") }}{{ end }}
- name: monitor_ids
  value: {{ if hasKey .operation.inputs "monitor_ids" }}{{ join "," .operation.inputs.monitor_ids }}{{ else }}{{ fail (printf $errorMsg "monitor_ids") }}{{ end }}
- name: action
  value: {{ if and (hasKey .operation.inputs "action") (or (eq .operation.inputs.action "resume") (eq .operation.inputs.action "pause")) }}{{ .operation.inputs.action }}{{ else }}{{ fail (printf (printf "%s (Only 'resume' or 'pause' value)" $errorMsg) "action") }}{{ end }}
- name: output_subject
  value: UptimeRobot
{{- end -}}

{{- if eq .operation.name "slack-notification" -}}
{{- $errorMsg := "\n\nThe %s is required in the slack-notification operation. The minimal schema is:\n  slack-notification:\n    secret_namespace: string\n    secret_name: string\n    operations: []string" -}}
- name: secret_namespace
  value: {{ if hasKey .operation.inputs "secret_namespace" }}{{ .operation.inputs.secret_namespace }}{{ else }}{{ fail (printf $errorMsg "secret_namespace") }}{{ end }}
- name: secret_name
  value: {{ if hasKey .operation.inputs "secret_name" }}{{ .operation.inputs.secret_name }}{{ else }}{{ fail (printf $errorMsg "secret_name ") }}{{ end }}
- name: operations
  value: {{ if hasKey .operation.inputs "operations" }}{{ join "," .operation.inputs.operations }}{{ else }}{{ fail (printf $errorMsg "operations") }}{{ end }}
- name: namespace
  value: {{ .Release.Namespace }}
{{- end -}}

{{- if or (eq .operation.name "aks-start-stop-cluster") (eq .operation.inputs.name "apply-patches-system-services-aks-to-datadog") -}}
{{- $errorMsg := "\n\nThe %s is required in the apply-patches-system-services-aks-to-datadog operation. The minimal schema is:\n  apply-patches-system-services-aks-to-datadog:\n    resource_group: string\n    cluster_name: string\n" -}}
- name: subscription_id
  value: {{ if hasKey .operation "subscription_id" }}{{ .operation.subscription_id }}{{ else }}{{ .global.subscription_id }}{{ end }}
- name: resource_group
  value: {{ if hasKey .operation.inputs "resource_group" }}{{ .operation.inputs.resource_group }}{{ else }}{{ fail (printf $errorMsg "resource_group") }}{{ end }}
- name: cluster_name
  value: {{ if hasKey .operation.inputs "cluster_name" }}{{ .operation.inputs.cluster_name }}{{ else }}{{ fail (printf $errorMsg "cluster_name") }}{{ end }}
{{- end -}}

{{- end -}}
