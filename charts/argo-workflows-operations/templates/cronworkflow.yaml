---
{{- /*
Define the Workflow resource for the argo-workflows-operations chart.
The name of the Workflow is dynamically generated using the "argo-workflows-operations.dynamic-name" template.
*/ -}}
{{ define "argo-workflows-operations.workflow" }}
---
apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: {{ include "argo-workflows-operations.dynamic-name" . | trunc 49 }}-cw
  namespace: {{ .Release.Namespace }}
spec:
  concurrencyPolicy: Replace
  schedule: {{ .operation.cron }}
  timezone: {{ if hasKey .operation "timezone" }}{{ .operation.timezone | default .global.timezone }}{{ else }}{{ .global.timezone }}{{ end }}
  successfulJobsHistoryLimit: 2
  suspend: {{ .operation.suspend | default false }}
  workflowSpec:
    entrypoint: main
    podGC:
      strategy: OnPodSuccess
      deleteDelayDuration: 48h
    serviceAccountName: {{ .Release.Name }}-{{ .Release.Namespace }}-sa
    templates:
      - name: main
        steps:
          - - name: {{ .operation.name }}
              templateRef:
                name: {{ .operation.name }}
                template: main
                clusterScope: true
              arguments:
                parameters:
{{ include "argo-workflows-operations.parameters" . | indent 18 }}
                  - name: output_tenant
                    value: {{ .Release.Namespace | splitList "-" | first }}
                  - name: output_environment
                    value: {{ .Release.Namespace | splitList "-" | last }}
{{- end }}

{{- /*
Iterate over the operations defined in the values file and create a Workflow for each operation.
The root context and the current operation are passed to the "argo-workflows-operations.workflow" template.
*/ -}}
{{- $root := . -}}
{{- range .Values.operations }}
  {{- include "argo-workflows-operations.workflow" (dict "root" $root "operation" . "Release" $root.Release "Values" $root.Values "global" $root.Values.global) -}}
{{- end }}