# Default values
#
# Set config values that will be pass as a
# envFrom section
#
configmap: {}

webService:
  image:

deployment:
  app:
  replicas: 1
  maintenance_mode: false # The value to true launches the command for maintenance action and cancels the standard command.
  containerPort: 80
  command:
    - foo
    - bar

service:
  labels:
  type:
  #Your app port
  port: 80


ingress:
  alb:
    #
    # If you want to use AWS Application Load Balancer, first you have to deploy the official ALB chart
    # Link here: https://artifacthub.io/packages/helm/aws/aws-load-balancer-controller
    #
    enabled: true
    protocol: HTTPS
    listenPorts: '[{"HTTPS":443}]'
    groupName: default-group
  path: /
  host: site.com
  annotations:

parameterStore:
  #
  # If you want to use aws parameter store, first you have to deploy csi-secrets-store-provider-aws official chart
  # Link here: https://artifacthub.io/packages/helm/aws/csi-secrets-store-provider-aws
  # Besides that, you have to create a new policy and a role for the service account to provide the secrets to the pods.
  #
  enabled: true

  #
  # Parameters use to be separated by a dot, slash... so you can modify this splitter depeding on the format of your parameters in AWS.
  #
  splitter: /

  #
  # Set your parameters following the format you have on your parameter store:
  #
  # Example:
  #
  # data:
  #   your_env_var_name: /my/parameter/path
  #   your_env_var_name_2: /my/parameter/path_2
  #
  data:




#
# Set secret values that will be stored in a Secret artifact and passed
# to de pods using an envFrom section
#
secrets: {}
